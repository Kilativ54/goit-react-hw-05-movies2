{"version":3,"file":"static/js/422.9f6aade5.chunk.js","mappings":"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","sources":["helpers/api.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MovieDescription/MovieDescription.styled.jsx","components/MovieDescription/MovieDescription.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNWIwYzYzN2RhYzFmZmFlMThjZDRmYmRjMjc1ZWFhOSIsInN1YiI6IjY0OTVjMzgzZDVmZmNiMDBlMjA1NzIzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.x9lPMVl4nfFlN901y3yy6-AcoB6SAlcKg0T-FQPITKg',\n  },\n};\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get('/trending/all/day?language=en-US', options);\n    return response.data.results;\n  }\n\n  async function fetchMovieSearch(query) {\n    const response = await axios.get(\n      `/search/movie?query=${query}&language=en-US`,\n      options\n    );\n    return response.data.results;\n  }\n\n  async function fetchMovieDetails(id) {\n    const response = await axios.get(`/movie/${id}?language=en-US`, options);\n    return response.data;\n  }\n\n  async function fetchAddition(id, param) {\n    const response = await axios.get(\n      `movie/${id}/${param}?language=en-US`,\n      options\n    );\n    return response.data;\n  }\n\n  export {\n    fetchTrendingMovies,\n    fetchMovieSearch,\n    fetchMovieDetails,\n    fetchAddition,\n  };\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst GoBack = styled(Link)`\n  display: block;\n  padding: 5px;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: #c25151;\n    font-weight: bold;\n  }\n\n  &::before {\n    content: '';\n  }\n`;\nconst Description = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.h2`\n  margin-top: 0;\n`;\n\nconst Text = styled.p`\n  text-align: justify;\n`;\n\nconst Addition = styled.div`\n  border-top: 1px solid gray;\n  border-bottom: 1px solid gray;\n`;\n\nconst AdditionList = styled.ul`\n  list-style: none;\n`;\n\nconst AdditionLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  margin-bottom: 10px;\n  &:hover,\n  &:focus {\n    color: #c25151;\n  }\n  &.active {\n    color: #c25151;\n    font-weight: bold;\n  }\n`;\n\nexport {\n  Container,\n  GoBack,\n  Description,\n  Title,\n  Text,\n  Addition,\n  AdditionList,\n  AdditionLink,\n};","import { Outlet, useLocation } from 'react-router-dom';\nimport { useRef, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  GoBack,\n  Description,\n  Title,\n  Text,\n  Addition,\n  AdditionList,\n  AdditionLink,\n} from './MovieDescription.styled';\nimport what from './what.jpg';\n\nfunction MovieDescription({ details }) {\n  const { title, release_date, vote_average, overview, genres, poster_path } =\n    details;\n  const date = new Date(release_date).getFullYear();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? './movies');\n\n  return (\n    <>\n      <GoBack to={backLinkLocation.current}>Go back</GoBack>\n      {details && (\n        <>\n          <Container>\n            <img\n              src={\n                poster_path\n                  ? 'https://image.tmdb.org/t/p/w300' + poster_path\n                  : what\n              }\n              width={250}\n              height={400}\n              alt=\"poster\"\n            />\n            <Description>\n              <Title>\n                {title} ({date})\n              </Title>\n              <p>User score: {Math.round(vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <Text>{overview}</Text>\n              <h3>Genres</h3>\n              {genres\n                ? genres.map(genre => genre.name + ' ')\n                : 'Not information'}\n            </Description>\n          </Container>\n          <Addition>\n            <h3>Additional information</h3>\n            <AdditionList>\n              <li>\n                <AdditionLink to=\"cast\">Cast</AdditionLink>\n              </li>\n              <li>\n                <AdditionLink to=\"review\">Review</AdditionLink>\n              </li>\n            </AdditionList>\n          </Addition>\n        </>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nMovieDescription.propTypes = {\n  details: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieDescription;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'helpers/api';\nimport MovieDescription from 'components/MovieDescription/MovieDescription';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState({});\n  useEffect(() => {\n    if (!movieId) return;\n    fetchMovieDetails(movieId)\n      .then(res => setDetails({ ...res }))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return <MovieDescription details={details} />;\n}\n\nexport default MovieDetails;"],"names":["axios","options","method","headers","accept","Authorization","fetchTrendingMovies","response","data","results","fetchMovieSearch","query","fetchMovieDetails","id","fetchAddition","param","_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","Container","styled","GoBack","Link","Description","Title","Text","Addition","AdditionList","AdditionLink","NavLink","details","title","release_date","vote_average","overview","genres","poster_path","date","Date","getFullYear","location","useLocation","backLinkLocation","useRef","state","from","to","current","src","width","height","alt","Math","round","map","genre","name","Suspense","fallback","movieId","useParams","useState","setDetails","useEffect","then","res","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","catch","err","console","log"],"sourceRoot":""}